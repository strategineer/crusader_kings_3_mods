#reptilian health effects list#

###################
# DISEASE EFFECTS #
###################

### GENERAL CONTRACT/RECOVER EFFECTS ###

# contract_disease_effect 			- Adds disease trait, sends treatment and notification events etc. NO contraction event. Needs argument DISEASE (trait name) and TREATMENT_EVENT (yes/no).
# contract_disease_notify_effect	- Sends a "contracted disease" event in 5-15 days. The event checks if the disease is valid and runs contract_disease_effect to apply the disease trait. Needs argument DISEASE (trait name).

### STD EFFECTS ###


# contract_reptilian_from - sends the scoped character "contracted reptilian" event if argument PARTNER has reptilian. Uses PARTNER in event.
# risk_of_reptilian_from_effect

##############################################################################################
# LIST ENDS HERE


####################
# STD EFFECTS      #
####################

# MOD START
contract_reptilian_from = {
    $PARTNER$ = { save_scope_as = infecting_partner }
    if = {
        limit = {
            scope:infecting_partner = {
                has_trait = reptilian
            }
        }
    }
    contract_disease_notify_effect = { DISEASE = reptilian }
}

risk_of_reptilian_from_effect = {
    random = {
        chance = 0
        modifier = {
            add = 100
            has_trait = reptilian
        }
        contract_reptilian_from = { PARTNER = $PARTNER$ }
    }
}
# MOD END

####################
# DISEASE EFFECTS  #
####################

#Adds the disease in question and sends notifications to everyone who should know. Checks validity and sends treatment event. Needs the arguments DISEASE (trait name, only exception is early_great_pox - it should be added as great_pox and then the effect will figure out whether the character should have early_great_pox first) and TREATMENT_EVENT (yes/no). Does NOT send an event to the character who gets the disease.
contract_disease_effect = {
	if = { #Is the disease valid?
		limit = { can_contract_disease_trigger = { DISEASE = $DISEASE$ } }

		hidden_effect = {
			#SET SCOPES
			save_scope_as = sick_character

			save_scope_value_as = {
				name = disease_type
				value = flag:$DISEASE$
			}

			save_temporary_scope_value_as = {
				name = treatment_event
				value = flag:$TREATMENT_EVENT$
			}

			if = {
				limit = { #Should I get early great pox instead of great pox?
					scope:disease_type = flag:great_pox
					NOR = {
						has_trait = lovers_pox
						has_trait = early_great_pox
					}
				}
				save_scope_value_as = {
					name = disease_type
					value = flag:early_great_pox
				}
			}

			#Data collection
			disease_data_save_contraction_effect = { DISEASE = $DISEASE$ }


			#TREATMENT EVENT
			if = {
				limit = {
					scope:treatment_event = flag:yes
					court_physician_available_trigger = yes
				}

				trigger_event = {
					id = health.3100
					days = 5
				}
			}
			else_if = {
				limit = { scope:treatment_event = flag:no } #This is just here to stop errors
			}
		}


		#NON-CONTAGIOUS DISEASES
		if = {
			limit = {
				OR = {
					scope:disease_type = flag:ill
					scope:disease_type = flag:pneumonic
					scope:disease_type = flag:gout_ridden
					scope:disease_type = flag:leper
					scope:disease_type = flag:typhus
					scope:disease_type = flag:consumption
					scope:disease_type = flag:cancer
				}
			}

			if = { #Removes ill if progressing to pneumonia
				limit = {
					scope:disease_type = flag:pneumonic
					has_trait = ill
				}
				remove_trait = ill
			}

			add_trait_force_tooltip = $DISEASE$
		}

		#STD DISEASES
        # MOD START
		else_if = { #Reptilian
			limit = { scope:disease_type = flag:reptilian}
			add_trait_force_tooltip = reptilian
		}
        # MOD END
		else_if = { #Lover's pox
			limit = { scope:disease_type = flag:lovers_pox }
			add_trait_force_tooltip = lovers_pox

			hidden_effect = {
				#Trigger regular contagion checks
				trigger_event = {
					id = health.1200
					days = { 60 1000 } #This first one can happen quite fast, the following checks are delayed 250-10000 days depending on traits
				}
			}
		}
		else_if = { #Early great pox
			limit = { scope:disease_type = flag:early_great_pox }
			add_trait_force_tooltip = early_great_pox

			hidden_effect = {
				trigger_event = {
					id = health.1013 #Reveals the true disease
					days = { 90 150 }
				}
			}
		}
		else_if = { #Great pox
			limit = {  scope:disease_type = flag:great_pox }

			hidden_effect = {
				remove_trait = lovers_pox #If you get Great Pox and already have lover's pox, we pretend that lover's pox was the first symptoms
				remove_trait = early_great_pox
			}
			add_trait_force_tooltip = great_pox

			hidden_effect = {
				#Trigger regular contagion checks
				trigger_event = {
					id = health.1201
					days = { 250 1500 } #This first one can happen quite fast, the following checks are delayed 350-10000 days depending on traits
				}
			}
		}

		#CONTAGIOUS "EPIDEMIC" DISEASES
		else_if = {
			limit = {
				OR = {
					scope:disease_type = flag:smallpox
					scope:disease_type = flag:bubonic_plague
				}
			}

			add_trait_force_tooltip = $DISEASE$

			#Regular contagion checks
			if = {
				limit = { scope:disease_type = flag:smallpox  }
				trigger_event = {
					id = health.1202
					days = { smallpox_contagion_min smallpox_contagion_max }
				}
			}
			else_if = {
				limit = { scope:disease_type = flag:bubonic_plague  }
				trigger_event = {
					id = health.1203
					days = { bubonic_plague_contagion_min bubonic_plague_contagion_max }
				}
			}

			#Set up notification system for players to collect data and inform about end of breakout
			if = {
				limit = {
					has_health_court_owner_trigger = yes #Imprisoner or court owner
				}
				save_health_court_owner_effect = { SCOPE_NAME = health_court_owner }#Imprisoner or court owner
				activate_outbreak_story_effect = {
					DISEASE = $DISEASE$
					RULER = scope:health_court_owner
					SICK_CHARACTER = scope:sick_character
				}
			}
		}

		#RECOVERY
		if = { #Ill
			limit = { scope:disease_type = flag:ill }
			trigger_event = {
				id = health.1101
				days = { ill_recovery_min ill_recovery_max }
			}
		}
		else_if = { #Pneumonic
			limit = { scope:disease_type = flag:pneumonic }
			trigger_event = {
				id = health.1102
				days = { pneumonic_recovery_min pneumonic_recovery_max }
			}
		}
		else_if = { #Gout
			limit = { scope:disease_type = flag:gout_ridden }
			random = {
				chance = 25
				modifier = {
					has_trait = gluttonous
					add = -15
				}
				modifier = {
					has_trait = temperate
					add = 15
				}
				trigger_event = {
					id = health.1103
					days = { gout_ridden_recovery_min gout_ridden_recovery_max } #1 to 30 years
				}
			}
		}
		else_if = { #Typhus
			limit = { scope:disease_type = flag:typhus }
			trigger_event = {
				id = health.1105
				days = { 45 150 }
			}
		}
		else_if = { #Consumption
			limit = { scope:disease_type = flag:consumption }
			trigger_event = {
				id = health.1106
				days = { 365 2190 } #1 to 6 years
			}
		}
		else_if = { #Cancer
			limit = { scope:disease_type = flag:cancer }
			random = {
				chance = 1
				trigger_event = {
					id = health.1107
					days = { 365 3650 } #1 to 10 years
				}
			}
		}
		else_if = { #Great pox
			limit = {
				OR = {
					scope:disease_type = flag:early_great_pox
					scope:disease_type = flag:great_pox
				}
			}
			trigger_event = {
				id = health.1109
				days = { 730 5475 } #2 to 15 years (note that early pox progresses into great pox in 60-150 days and great pox leads to lunacy after 5 to 15 years)
			}
		}
		else_if = { #Smallpox
			limit = { scope:disease_type = flag:smallpox }
			trigger_event = {
				id = health.1110
				days = { smallpox_min_recovery_time smallpox_max_recovery_time }
			}
		}
		else_if = { #Bubonic Plague
			limit = { scope:disease_type = flag:bubonic_plague }
			trigger_event = {
				id = health.1111
				days = { bubonic_plague_min_recovery_time bubonic_plague_max_recovery_time }
			}
		}
		#No recovery for leper and lover's pox


		#EPILEPSY RISK
		if = {
			limit = { scope:disease_type = flag:ill }
			epilepsy_fever_risk_effect = { CHANCE = 1 }
		}
		else_if = {
			limit = {
				OR = {
					scope:disease_type = flag:pneumonic
					scope:disease_type = flag:typhus
					scope:disease_type = flag:consumption
					scope:disease_type = flag:smallpox
					scope:disease_type = flag:bubonic_plague
				}
			}
			epilepsy_fever_risk_effect = { CHANCE = 5 }
		}

		#NOTIFICATIONS: CONTAGIOUS DISEASE, FAMILY & SEX PARTNER STD, NOTIFICATIONS & LIEGE TREATMENT EVENTS

		#List creation:
		#Imprisoner/court owner if contagious
		if = {
			limit = {
				OR = {
					scope:disease_type = flag:smallpox
					scope:disease_type = flag:bubonic_plague
				}
				is_ruler = no
				has_health_court_owner_trigger = yes #Imprisoner or court owner
			}
			save_health_court_owner_effect = { SCOPE_NAME = health_court_owner }#Imprisoner or court owner

			scope:health_court_owner = {
				if = {
					limit = { NOT = { is_in_list = disase_notification_list } }
					add_to_temporary_list = disase_notification_list
				}
			}
		}
		#Sex partners if STD
		if = {
			limit = {
				OR = {
					scope:disease_type = flag:lovers_pox
					scope:disease_type = flag:early_great_pox
					scope:disease_type = flag:great_pox
					scope:disease_type = flag:reptilian
				}
			}
			every_consort = {
				limit = {
					#is_imprisoned = no
					NOT = { is_in_list = disase_notification_list }
				}
				add_to_temporary_list = disase_notification_list
			}
			every_relation = {
				type = lover
				limit = {
					#is_imprisoned = no
					NOT = { is_in_list = disase_notification_list }
				}
				add_to_temporary_list = disase_notification_list
			}
		}
		#Family if the disease is somewhat dangerous
		if = {
			limit = {
				sick_enough_for_relative_to_care_trigger = yes
			}
			every_parent = {
				limit = {
					is_landed = yes
					NOT = { is_in_list = disase_notification_list }
				}
				add_to_temporary_list = disase_notification_list
			}
			every_spouse = {
				limit = {
					is_landed = yes
					NOT = { is_in_list = disase_notification_list }
				}
				add_to_temporary_list = disase_notification_list
			}
			every_heir_title = {
				limit = {
					exists = holder
				}
				holder = {
					if = {
						limit = {
							player_heir = scope:sick_character
							NOT = { is_in_list = disase_notification_list }
						}
						add_to_temporary_list = disase_notification_list
					}
				}
			}
		}


		#Go through list and send notifications
		every_in_list = {
			list = disase_notification_list

			#Send a contagion warning/treatment event
			if = {
				limit = {
					OR = {
						scope:disease_type = flag:smallpox
						scope:disease_type = flag:bubonic_plague
					}
					scope:sick_character = { has_health_court_owner_trigger = yes }
					trigger_if = {
						limit = { exists = scope:trigger_health_court_owner } #Set by trigger above
						this = scope:trigger_health_court_owner
					}
				}
				#Event if important sick character or this is start of outbreak
				if = {
					limit = {
						OR = {
							has_new_contagious_disease_outbreak_story_trigger = yes
							trigger_if = {
								limit = { exists = player_heir }
							 	player_heir = scope:sick_character
							}
							is_parent_of = scope:sick_character
							is_spouse_of = scope:sick_character
						}
					}
					trigger_event = health.2101
				}
				#Otherwise feed message
				else_if = {
					limit = { is_ai = no } #AIs don't care about updates
					save_temporary_scope_as = message_receiver
					send_interface_message = {
						title = health_$DISEASE$_spreads_message
						left_icon = scope:sick_character
						show_as_tooltip = {
							scope:sick_character = { add_trait_force_tooltip = $DISEASE$ }
						}
					}
				}
			}
			#Send a STD warning event
			else_if = {
				limit = {
					OR = {
						scope:disease_type = flag:lovers_pox
						scope:disease_type = flag:early_great_pox
						scope:disease_type = flag:great_pox
						scope:disease_type = flag:reptilian
					}
					OR = {
						is_consort_of = scope:sick_character
						has_relation_lover = scope:sick_character
					}
				}
				scope:sick_character = { save_scope_as = std_partner }
				if = {
					limit = { scope:disease_type = flag:great_pox }
					trigger_event = {
						id = health.2002 #Partner has great pox
						days = { 7 14 }
					}
				}
				else = {
					trigger_event = {
						id = health.2001 #Partner has lover's pox/early great great pox
						days = { 7 14 }
					}
				}
			}
			#Send a notification/treatment event to family
			else_if = {
				limit = {
					OR = {
						#It's a player heir
						trigger_if = {
							limit = { exists = player_heir }
						 	player_heir = scope:sick_character
						}
						#Or a child/spouse who is really sick or this character has to pick their treatment
						AND = {
							OR = {
								is_parent_of = scope:sick_character
								is_spouse_of = scope:sick_character
							}
							OR = {
								#The sick character is dying
								health < death_chance_dying_health
								#This character gets to pick sick character's treatment
								trigger_if = {
									limit = { exists = scope:sick_character.liege }
									this = scope:sick_character.liege
									scope:sick_character = { liege_picks_treatment_trigger = yes }
								}
							}
						}
					}
				}
				trigger_event = {
					id = health.2201 #Important character is sick
					days = 3
				}
				#set a variable, so you are sure to get a follow-up
				if = {
					limit = { is_ai = no }
					scope:sick_character = {
						add_to_variable_list = {
							name = recovery_event_receivers
							target = prev
						}
					}
				}
			}
			#Send a feed message
			else = {
				save_scope_as = message_receiver
				send_interface_message = {
					left_icon = scope:sick_character
					title = disease_contraction_feed_message.t
					show_as_tooltip = {
						scope:sick_character = {
							if = {
								limit = { scope:disease_type = flag:early_great_pox }
								add_trait_force_tooltip = early_great_pox
							}
							else = {
								add_trait_force_tooltip = $DISEASE$
							}
						}
					}
				}
			}
		}
	}
}


#Triggers an event giving you the disease (if you meet the conditions) and notifying everyone who should know. Needs the arguments DISEASE trait name, only exception is early_great_pox - it should be added as great_pox and then the effect will figure out whether the character should have early_great_pox first)
contract_disease_notify_effect = {
	save_scope_value_as = {
		name = disease_type
		value = flag:$DISEASE$
	}

	#Ill
	if = {
		limit = { scope:disease_type = flag:ill }
		trigger_event = { id = health.1001 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:pneumonic }
		trigger_event = { id = health.1002 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:gout_ridden }
		trigger_event = { id = health.1003 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:leper }
		trigger_event = { id = health.1004 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:typhus }
		trigger_event = { id = health.1005 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:consumption }
		trigger_event = { id = health.1006 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:cancer }
		trigger_event = { id = health.1007 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:lovers_pox }
		trigger_event = { id = health.1008 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:great_pox }
		trigger_event = { id = health.1009 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:smallpox }
		trigger_event = { id = health.1010 days = { 5 15 } }
	}
	else_if = {
		limit = { scope:disease_type = flag:bubonic_plague }
		trigger_event = { id = health.1011 days = { 5 15 } }
	}
    # MOD START
	else_if = {
		limit = { scope:disease_type = flag:reptilian}
		trigger_event = { id = health.1012 days = { 5 15 } }
	}
    # MOD END
}
