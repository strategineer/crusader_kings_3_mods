turn_reptilian = {

	skill = intrigue
	hostile = yes

	power_per_skill_point = 3.0
	resistance_per_skill_point = 1.0
	power_per_agent_skill_point = 2

	minimum_progress_chance = 10
	maximum_progress_chance = 90
	minimum_success = 5
	maximum_secrecy = 95
	maximum_success = 95

	allow = {
		has_trait = reptilian
		is_adult = yes
		is_landed = yes
		is_imprisoned = no
	}

	valid = {
		has_trait = reptilian
		scope:target = {
			exists = location
			NOT = { has_trait = reptilian }
		}
	}

	agent_join_chance = {
		base = 0

		if = {
			limit = { has_trait = reptilian }
			# Base Reluctance, including negative AI Energy
			modifier = {
				add = {
					value = -20
					if = {
						limit = {
							ai_energy < 0
						}
						add = {
							value = ai_energy
							multiply = 0.5
						}
					}
				}
				desc = BASE_RELUCTANCE
			}
			#Is Owner sending a gift in the invite interaction?
			modifier = {
				add = bribe_acceptance_value
				exists = scope:gift
				always = scope:gift
				NOT = {
					OR = {
						scope:target = { is_parent_of = root }
						root = { is_parent_of = scope:target }
					}
				}
				desc = "SCHEME_WITH_GIFT"
			}

			#Default Hostile Scheme modifiers
			hostile_murder_agent_base_join_chance_modifier = yes
		}
	}

	base_success_chance = {
		base = 0

		hostile_scheme_base_chance_modifier = yes

		# Spiritual Head of Faith
		modifier = {
			add = -50
			desc = "SCHEME_VS_SPIRITUAL_HOF"
			scope:target = {
				faith = scope:owner.faith
				faith = {
					has_doctrine = doctrine_spiritual_head
				}
				faith = {
					exists = religious_head
					religious_head = {
			 			this = scope:target
			 		}
				}
			}
		}
	}

	agent_success_chance = {
		base = 0
		hostile_scheme_agent_success_chance_modifier = yes #Adds a value depending on their "closeness" to target
	}

	agent_leave_threshold = -25

	cooldown = { years = 10 }
	is_secret = yes
	base_secrecy = 10

	on_ready = {
		scheme_owner = {
			if = {
				limit = {
					has_character_flag = is_in_event_turn_reptilian_outcome_0001
				}
				trigger_event = {
					id = turn_reptilian_outcome.0001
					days = 1
				}
			}
			else = {
				trigger_event = turn_reptilian_outcome.0001
			}
		}
	}

	on_monthly = {
		hostile_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			scheme_owner = {
				trigger_event = {
					on_action = turn_reptilian_ongoing
					days = { 1 30 }
				}
			}
		}
	}


	on_invalidated = {
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = turn_reptilian_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_died
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = { has_trait = reptilian }
			}
			scope:owner = {
				send_interface_message = {
					title = turn_reptilian_scheme_invalidated_title
					type = turn_reptilian_invalidated_i_became_reptilian_message
					desc = turn_reptilian_scheme_i_became_reptilian_message
					left_icon = scope:target
				}
			}
		}
	}


	success_desc = "TURN_REPTILIAN_SUCCESS_DESC"
	discovery_desc = "TURN_REPTILIAN_DISCOVERY_DESC"
}
